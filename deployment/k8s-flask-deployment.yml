apiVersion: v1
kind: Namespace
metadata:
  name: flask-user-app-dev-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-user-app
  namespace: flask-user-app-dev-namespace
spec:
  replicas: 4
  selector:
    matchLabels:
      app: flask-user-app
  template:
    metadata:
      labels:
        app: flask-user-app
    spec:
      automountServiceAccountToken: false
      containers:
      - name: flask-user-app
        image: harshilkansagara/flask_user_app:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: FLASK_ENV
        - name: FLASK_APP
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: FLASK_APP
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-user-app-secret
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: flask-user-app-config
              key: DB_NAME
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: flask-user-app-service
  namespace: flask-user-app-dev-namespace
spec:
  selector:
    app: flask-user-app
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 5000
  type: ClusterIP
